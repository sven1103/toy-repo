name: Release

on:
  workflow_dispatch:
    inputs:
      versionTag:
        description: 'Version Tag (semantic version)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.JOHNNY_Q5_REPORTS_TOKEN }}
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }}

      - name: Load local Maven repository cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up git
        run: |
            git config --global user.email "support@qbic.zendesk.com"
            git config --global user.name "JohnnyQ5"
          
      - name: Set version in Maven project
        run:  mvn versions:set -DnewVersion=${{ github.event.inputs.versionTag }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Create Release Notes
        if: ${{ !startsWith(github.ref, 'refs/tags/')
                  && !( contains(github.event.inputs.versionTag, 'alpha')
                     || contains(github.event.inputs.versionTag, 'beta')
                     || contains(github.event.inputs.versionTag, 'rc')) }}
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ github.event.inputs.versionTag }}",
              generate_release_notes: true
            });

      - name: Create Pre-Release Notes
        if: ${{ !startsWith(github.ref, 'refs/tags/')                     
                  && ( contains(github.event.inputs.versionTag, 'alpha')
                     || contains(github.event.inputs.versionTag, 'beta')
                     || contains(github.event.inputs.versionTag, 'rc')) }}
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ github.event.inputs.versionTag }}",
              generate_release_notes: true,
              prerelease: true
            });


      - name: Switch to new branch
        run: git checkout -b release/set-version-to-${{ github.event.inputs.versionTag }}

      - name: Checkin commit
        run: git commit . -m 'Set version to ${{ github.event.inputs.versionTag }}'

      - name: Set remote branch
        run: git push --set-upstream origin release/set-version-to-${{ github.event.inputs.versionTag }}

      - name: Open PR
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/pulls`, {
              title: 'Update version to ${{ github.event.inputs.versionTag }}',
              head: 'release/set-version-to-${{ github.event.inputs.versionTag }}',
              base: 'main'
            });

